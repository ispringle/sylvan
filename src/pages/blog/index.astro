---
import Base from "@layouts/Base.astro";
import { getURL, slugify } from "@utils";
import { getCollection, getEntry } from "astro:content";

const devMode = import.meta.env.DEV;

const allPosts = await Astro.glob("/content/blog/*.md");

  const posts = devMode
    ? allPosts
        .sort((a, b) => b.frontmatter.created.valueOf() - a.frontmatter.created.valueOf())
        .filter((a) => a.frontmatter.title != "index")
    : allPosts
        .sort((a, b) => b.frontmatter.created.valueOf() - a.frontmatter.created.valueOf())
        .filter((a) => (a.frontmatter.draft = !true))
        .filter((a) => (a.frontmatter.public = !false))
        .filter((a) => a.frontmatter.title != "index");

const index = allPosts.find((a) => a.frontmatter.title == "index");
const { Content } = index ? index : { Content: undefined };
const pageTitle = index ? index.frontmatter.title : "Post Index";
---

<Base pageTitle={pageTitle}>
  <article>
    {
      Content ? (
        <article>
          <Content />
        </article>
      ) : (
        ""
      )
    }
    <article>
      <h2>Posts</h2>
      <ul>
        {
          posts.map((post) => (
            <li>
              <a href={getURL(Astro.url.origin, "blog", slugify(post.frontmatter.title))}>
                {post.frontmatter.title}
              </a>{" "}
              - {post.frontmatter.created}
            </li>
          ))
        }
      </ul>
    </article>
  </article>
</Base>
