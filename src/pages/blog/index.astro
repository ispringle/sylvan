---
import Base from "@layouts/Base.astro";
import { getURL, slugify } from "@utils";
import { getCollection, getEntry } from "astro:content";

const devMode = import.meta.env.DEV;

const allPosts = await getCollection("blog");
const publishablePosts = allPosts
  .filter((a) => (a.data.draft = !true))
  .filter((a) => (a.data.public = !false));

const posts = devMode
  ? allPosts
      .sort((a, b) => b.data.created.valueOf() - a.data.created.valueOf())
      .filter((a) => a.data.title != "index")
  : publishablePosts
      .sort((a, b) => b.data.created.valueOf() - a.data.created.valueOf())
      .filter((a) => a.data.title != "index");

const index = await getEntry("blog", "index.md").catch((content) => undefined);
const { Content } = index ? await index.render() : { Content: undefined };
const pageTitle = index ? index.data.title : "Post Index";
---

<Base pageTitle={pageTitle}>
  <article>
    {
      Content ? (
        <article>
          <Content />
        </article>
      ) : (
        ""
      )
    }
    <article>
      <h2>Posts</h2>
      <ul>
        {
          posts.map((post) => (
            <li>
              <a href={getURL(Astro.url.origin, post.collection, post.slug)}>
                {post.data.title}
              </a>{" "}
              - {post.data.created}
            </li>
          ))
        }
      </ul>
    </article>
  </article>
</Base>
